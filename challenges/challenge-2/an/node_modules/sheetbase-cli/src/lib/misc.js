"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var chalk_1 = require("chalk");
/**
 * Check is a string is a valid git url
 * @param str - Git url
 */
function isValidGitUrl(str) {
    return str && str.substr(0, 8) === 'https://' && str.substr(str.length - 4, 4) === '.git';
}
exports.isValidGitUrl = isValidGitUrl;
/**
 * Build app config links
 * @param input - App configs
 */
function buildConfigLinks(input) {
    var result = {};
    for (var key in input) {
        // backend url
        if (key === 'backendUrl')
            result['backendUrl'] = input[key];
        // drive folder
        if (key === 'driveFolder')
            result['driveFolderUrl'] = "https://drive.google.com/drive/folders/" + input[key];
        // backend script
        if (key === 'scriptId')
            result['scriptUrl'] = "https://script.google.com/d/" + input[key] + "/edit";
        // database
        if (key === 'databaseId')
            result['databaseUrl'] = "https://docs.google.com/spreadsheets/d/" + input[key] + "/edit";
        // content folder
        if (key === 'contentFolder')
            result['contentFolderUrl'] = "https://drive.google.com/drive/folders/" + input[key];
    }
    return result;
}
exports.buildConfigLinks = buildConfigLinks;
/**
 *
 * @param ids - Drive file ids to check
 */
function driveSetupUnsuccessMessage(ids) {
    var message = '';
    if (!ids.contentFolder || !ids.databaseId || !ids.scriptId) {
        message += '\n';
        message += (chalk_1.default.yellow('\n(!) Error setting up one or more Drive files, please set them up manually!'));
        if (ids.driveFolder) {
            message += '\nProject folder Url: ' + chalk_1.default.green("https://drive.google.com/drive/folders/" + ids.driveFolder);
        }
        if (!ids.contentFolder) {
            message += ('\n' +
                '+ ' + chalk_1.default.yellow('contentFolder') + ' (./backend/configs/Sheetbase.config.js)');
        }
        if (!ids.databaseId) {
            message += ('\n' +
                '+ ' + chalk_1.default.yellow('databaseId') + ' (./backend/configs/Sheetbase.config.js)');
        }
        if (!ids.scriptId) {
            message += ('\n' +
                '+ ' + chalk_1.default.yellow('scriptId') + ' (./backend/.clasp.json)');
        }
        message += '\n';
    }
    return message;
}
exports.driveSetupUnsuccessMessage = driveSetupUnsuccessMessage;
