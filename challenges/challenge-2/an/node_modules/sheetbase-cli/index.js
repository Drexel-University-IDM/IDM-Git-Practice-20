#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var program = require('commander');
var chalk_1 = require("chalk");
var figlet = require('figlet');
var login_1 = require("./src/login");
var logout_1 = require("./src/logout");
var whoami_1 = require("./src/whoami");
var start_1 = require("./src/start");
var setup_1 = require("./src/setup");
var url_1 = require("./src/url");
var config_1 = require("./src/config");
program
    .version('0.0.13', '-v, --version')
    .usage('sheetbase [options] [command]')
    .description('Sheetbase CLI');
program
    .command('login')
    .description('Login into your Google account.')
    .action(function (cmd) {
    return login_1.default();
});
program
    .command('logout')
    .description('Logout of your Google account.')
    .action(function (cmd) {
    return logout_1.default();
});
program
    .command('whoami')
    .description('Show your account info.')
    .action(function (cmd) {
    return whoami_1.default();
});
program
    .command('start <projectName>')
    .description('Start a new project in directory <projectName>.')
    .option('-t, --theme [theme]', 'Official theme name or theme repo .git URL', 'ionic-starter')
    .option('-x, --noNpmInstall', 'Do not install npm packages')
    .option('-u, --noGit', 'Do not setup GIT')
    .action(function (projectName, cmd) {
    return start_1.default(projectName, cmd.theme, cmd.noNpmInstall, cmd.noGit);
});
program
    .command('setup')
    .description('Setup the project.')
    .option('-x, --noNpmInstall', 'Do not install npm packages')
    .option('-u, --noGit', 'Do not setup GIT')
    .action(function (cmd) {
    return setup_1.default(cmd.noNpmInstall, cmd.noGit);
});
program
    .command('url')
    .description('View useful project urls.')
    .option('-o, --open [urlKey]', 'Open link in browser')
    .action(function (cmd) {
    return url_1.default(cmd.open);
});
program
    .command('config <action>')
    .description('Set config for the project.')
    .option('-m, --manual [data]', 'Manually set the configs')
    .action(function (action, cmd) {
    return config_1.default(action, cmd.manual);
});
program
    .command('help')
    .description('Output help')
    .action(function (cmd) {
    console.log(chalk_1.default.yellow(figlet.textSync('Sheetbase', { horizontalLayout: 'full' })));
    return program.outputHelp();
});
program
    .command('*', { isDefault: true })
    .description('Any other command is not supported')
    .action(function (cmd) {
    console.log(chalk_1.default.red("Unknown command \"" + cmd + "\""));
});
if (!process.argv.slice(2).length) {
    console.log(chalk_1.default.yellow(figlet.textSync('Sheetbase', { horizontalLayout: 'full' })));
    program.outputHelp();
}
program.parse(process.argv);
